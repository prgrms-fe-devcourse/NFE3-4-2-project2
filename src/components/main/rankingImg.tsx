import useQuizInfoManager, { quizInfo } from "../quiz/useQuizInfoManager";
import { useEffect, useState } from "react";
export default function Ranking() {
  const { getAllQuizInfo } = useQuizInfoManager();
  const [rankingInfo, setRankingInfo] = useState<quizInfo[]>();
  const rankingColor = ["red", "blue", "orange"];

  useEffect(() => {
    async function fetchQuizInfo() {
      try {
        const data: quizInfo[] = await getAllQuizInfo();

        // 두 기준으로 정렬:
        // 1. highScore 내림차순
        // 2. highScore가 동일할 경우, scores 길이 오름차순
        const sortedData = data.sort((a, b) => {
          // highScore 내림차순 정렬
          if (b.highScore !== a.highScore) {
            return b.highScore - a.highScore;
          }
          // highScore가 같으면 scores 길이 오름차순 정렬
          return a.scores.length - b.scores.length;
        });

        // 상위 3개의 항목을 선택
        const top3 = sortedData.slice(0, 3);
        setRankingInfo(top3);
      } catch (e) {
        console.error("퀴즈 정보를 불러오던 중 오류 발생:", e);
      }
    }
    fetchQuizInfo();
  }, []);

  function RankingMask({ color }: { color: string }) {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="65"
        height="65"
        fill="none"
      >
        <defs>
          {/* rx가 32인 rect는 width, height가 64이면 동그라미와 동일한 형태입니다. */}
          <clipPath id="clipCircle">
            <rect width="64" height="64" x=".5" y=".5" rx="32" />
          </clipPath>
        </defs>
        {/* clipPath를 적용할 그룹 */}
        <g clipPath="url(#clipCircle)">
          <rect width="64" height="64" x=".5" y=".5" stroke={color} rx="32" />
          <path
            fill={color}
            d="M18.167.2028c-1.4981.3936-2.9072 1.498-3.5801 2.7803-.3301.6094-4.4687 12.2256-4.8623 13.6475-.4824 1.6885-.584 3.1103-.584 8.0234v4.7988h-.4824c-1.168 0-2.5772.7872-3.0596 1.7012-.1396.2412-.2793.3301-.5586.3301-1.1298 0-2.539 1.041-2.8564 2.1074-.1143.3936-.1524 3.669-.1524 13.4317v12.8984h2.0313V34.1374l.3174-.3174c.457-.457.6982-.3554.914.3809.3809 1.2822 1.9043 2.3613 3.3643 2.3613h.4824v2.8945c0 3.212.1016 3.834.7871 5.129.5332 1.0029 1.7393 2.1201 2.8057 2.5771.8379.3682.8506.3809 1.0537 1.0791.1143.3809.457 1.3584.7744 2.1582 1.46 3.7197 3.6182 7.0332 6.1573 9.4707 9.3818 9.001 22.2421 5.8018 28.7041-7.1348.3173-.622.5966-1.2441.622-1.3584.0254-.1777-.1777-.3173-.8379-.5966-.4824-.2032-.8886-.3682-.914-.3428-.0127.0127-.3936.7617-.8506 1.6758-3.0342 5.9922-7.5537 9.7373-12.835 10.664-3.2754.5713-6.9443-.2666-9.915-2.2597-5.294-3.5547-8.9883-10.1944-10.169-18.3067-.3173-2.1455-.3173-7.1601-.0127-9.2041.3174-2.0185.7998-4.1386 1.3077-5.7256.2412-.7363.4316-1.3964.4316-1.4599 0-.0635-.4062-.2666-.9014-.457l-.9013-.3301-.1778.4443c-.584 1.3838-1.5361 5.4082-1.8281 7.6553-.3809 3.0088-.2793 7.3633.2412 10.4101.127.7364.2158 1.3584.1904 1.3838-.1015.1143-1.041-1.0029-1.333-1.5869l-.3046-.6221v-7.7441c0-8.2393.0253-8.6709.6474-11.1592 1.1299-4.5576 3.5547-8.747 6.8301-11.8447 3.085-2.92 6.335-4.6719 10.2959-5.5225 1.8281-.3935 5.167-.3935 6.9951 0 2.2979.4951 4.6719 1.4346 6.3731 2.5137.3681.2412.6855.4316.7109.4316.0254 0 .292-.3808.5967-.8378.4443-.6856.5078-.8506.3554-.9522-.1015-.0635-.6855-.419-1.3076-.7744l-1.1172-.6602.0635-.7109c.1143-1.2822.876-2.3994 2.0567-3.0215.8759-.4697 2.3867-.4824 3.2373-.038.7363.3808 1.3584.9648 1.663 1.5741.1397.2667 1.2315 3.2374 2.4122 6.6016 1.8789 5.3194 2.6406 7.7442 2.6533 8.4678 0 .1015-.3301-.4697-.7364-1.2695-.9013-1.7901-1.8281-3.2247-3.1611-4.8877-1.0791-1.333-3.2754-3.542-3.4531-3.4659-.0635.0254-.3682.3555-.6856.7364l-.5839.6982 1.498 1.5234c.8125.8379 1.752 1.8663 2.0693 2.2852 2.8438 3.7705 4.583 8.1504 5.0528 12.8223.0888.914.1269 3.8213.1015 8.3154l-.0381 6.9189-.4316.7998c-.3682.6729-1.1045 1.5235-1.2187 1.3965-.0127-.0254.0761-.6474.2031-1.3838 1.7519-10.2578-1.1934-21.1503-7.4776-27.7011-4.875-5.0528-11.248-6.8555-17.2275-4.8623-2.5898.8759-4.6338 2.1455-6.8428 4.2656-1.498 1.4473-3.0976 3.3896-2.9199 3.542.3682.3174 1.4346 1.0283 1.5234 1.0156.0635 0 .5713-.584 1.1426-1.2949 3.6944-4.6719 8.9629-6.957 14.0791-6.1192 4.3799.711 8.3028 3.4913 11.3115 7.9981 4.5958 6.9189 6.0684 16.7832 3.8086 25.6445-.1777.6983-.4062 1.5108-.5078 1.8028-.1142.3173-.1396.5712-.0761.6093.2031.127 1.5488.5713 1.7138.5713.0889 0 .2539-.3301.3682-.7363.2031-.7236.2031-.7236 1.041-1.0918 1.7012-.749 3.1357-2.5518 3.4785-4.3799.0762-.3681.127-1.9297.127-3.4531v-2.7803h.4824c1.46 0 2.9834-1.0791 3.3643-2.3613.2158-.7363.457-.8379.914-.3809l.3174.3174v25.7842h2.0313V47.0232c0-9.6104-.0381-13.0381-.1524-13.4063-.3301-1.1299-1.6758-2.1328-2.831-2.1328-.3047 0-.4444-.0762-.584-.3301-.4825-.914-1.8916-1.7012-3.0596-1.7012h-.4824V24.654c0-4.9131-.1016-6.3349-.584-8.0234-.3936-1.4219-4.5322-13.0381-4.8623-13.6475-.6856-1.3076-2.0947-2.3867-3.6309-2.793-3.123-.8125-6.3857 1.2442-7.0459 4.4561-.1269.5713-.1904.6856-.3554.622-.6221-.2411-2.4629-.7236-3.4913-.914-1.5996-.292-5.1796-.3047-6.7539-.0127-1.0029.1905-2.8945.6856-3.5166.9268-.165.0635-.2285-.0508-.3554-.6221-.6729-3.2246-3.961-5.294-7.0967-4.4434Zm3.0342 2.209c1.2695.6348 2.0566 1.8155 2.082 3.085l.0127.749-1.1934.6856c-1.8281 1.0537-3.0976 2.0185-4.7353 3.5927-2.3233 2.2344-3.9863 4.4688-5.3955 7.2364-.3682.7236-.6729 1.2695-.6729 1.206 0-.0635.1143-.5967.2412-1.1933.2539-1.1172 4.3799-12.9493 4.8243-13.7998.4062-.7998 1.2822-1.4981 2.2978-1.8282.5586-.1904 1.9297-.0508 2.5391.2666ZM9.1406 33.0202v1.5489l-.584-.0762c-.876-.0889-1.3837-.6475-1.3837-1.4727 0-.9267.5966-1.5107 1.5615-1.5234l.4062-.0127v1.5361Zm48.293-1.041c.3301.3428.3935.4951.3935 1.0283 0 .8379-.5078 1.3965-1.3837 1.4854l-.584.0762V31.446l.584.0762c.4316.0381.6982.165.9902.457Z"
          />
          <path
            fill={color}
            d="M31.2325 14.4215c-2.8819 1.041-3.7197 4.5957-1.5869 6.7158.8379.8379 1.5869 1.1426 2.8564 1.1299.9141 0 1.1807-.0508 1.7266-.3301.9521-.4951 1.3584-.8887 1.8408-1.7773.3809-.7237.4189-.9014.4316-1.8789 0-1.2696-.3046-2.0186-1.1425-2.8565-1.0411-1.041-2.8184-1.4726-4.126-1.0029Zm2.0693 2.0059c1.3076.5459 1.625 2.247.6094 3.2627-1.4219 1.4345-3.7578.1523-3.3897-1.8536.2286-1.1933 1.625-1.9043 2.7803-1.4091ZM15.8712 21.8486c-.292.5586-.5078 1.041-.4825 1.0664.1016.0889 1.625.8252 1.7266.8252.0508 0 .3047-.4189.5586-.9394.5205-1.0537.5586-.9522-.5586-1.5869l-.7236-.4063-.5205 1.041ZM23.5625 23.5498c-2.4121.6094-4.6846 2.7676-5.6494 5.3447-.3301.8633-.6475 2.3868-.6475 3.1104V32.5h2.0313v-.4824c0-.2539.0888-.8633.1904-1.3457.6856-3.2119 3.415-5.5225 6.208-5.2305 1.2442.127 2.1328.6475 3.4277 1.9932 1.0157 1.0664 1.1045 1.1933 1.0284 1.5615-.1778.8633-.127.8252-.9268.6348-1.4219-.3428-2.9961-.1651-4.2148.457-.2412.1269-1.1553.7236-2.0186 1.333-1.8535 1.2949-3.0723 1.917-4.0244 2.0439l-.6855.0762v2.044l.7617-.0889c1.5361-.1777 2.8945-.8125 5.0908-2.3994.7236-.5205 1.5742-1.0791 1.8916-1.2315.6728-.3427 1.9551-.4697 2.793-.2666.4189.0889.5839.0889.6601-.0254.1778-.2793.1143.0889-.9775 5.5225-.8125 4.0371-1.0791 5.6113-1.0791 6.3731v1.0029l-1.168 1.1553c-.7744.749-1.5107 1.3457-2.1328 1.6884-1.5742.8887-3.5547 1.4346-5.167 1.4346h-.6728v2.0693l1.2441-.0761c3.1103-.2032 5.9668-1.4727 8.1885-3.6436l.9013-.876.9268.8506c1.2949 1.1807 1.9424 1.5742 2.6914 1.6504 1.1045.1016 1.498-.1016 3.2119-1.6504l.9395-.8506.8886.8506c2.3233 2.2852 5.6748 3.7071 8.6963 3.7071h.7491V48.7881l-1.168-.0762c-2.7549-.1904-5.167-1.3203-7.0713-3.3262l-.9014-.9521v-.9902c0-.7237-.2793-2.3741-1.0791-6.3477-1.0918-5.4336-1.1552-5.8018-.9775-5.5225.0762.1143.2412.1143.6601.0254.8379-.2031 2.1202-.0761 2.793.2666.3174.1524 1.168.711 1.8916 1.2315 2.1963 1.5869 3.5547 2.2217 5.0908 2.3994l.7618.0889v-2.044l-.6856-.0762c-.9521-.1269-2.1709-.749-4.0244-2.0439-1.8154-1.2695-2.1963-1.4854-3.2246-1.7773-.8125-.2413-2.7168-.2159-3.3897.0507-.3681.1397-.3808.1397-.5459-.6982-.0761-.3682.0127-.4951 1.0284-1.5615 1.2949-1.3457 2.1835-1.8662 3.4277-1.9932 2.8057-.292 5.5225 2.0059 6.208 5.2559.1016.5078.1904 1.1298.1904 1.3711V32.5h2.0694l-.0762-.9268c-.3428-3.8974-2.9834-7.2363-6.3857-8.0361-1.6758-.3935-3.7198-.0254-5.2432.9522-.3555.2285-.9522.749-1.333 1.1679l-.6983.7491h-3.0722l-.6221-.6856c-1.3457-1.46-2.9453-2.2217-4.8877-2.3105-.749-.0254-1.3965.0127-1.8916.1396Zm10.5498 12.0098c.9141 4.5449 1.4219 7.3252 1.4346 7.8711v.8252l-1.3457 1.206c-.749.6602-1.4854 1.2061-1.6504 1.2315-.2412.038-.6348-.2413-1.7012-1.2061l-1.3965-1.2441v-.7618c0-.6347 2.6153-14.2441 2.8565-14.8916.2158-.5839.4697.3936 1.8027 6.9698Z"
          />
          <path
            fill={color}
            d="M21.0762 38.7965c-2.8818 1.041-3.7197 4.5957-1.5869 6.7158.8379.8379 1.5869 1.1426 2.8565 1.1299.914 0 1.1806-.0508 1.7265-.3301.9522-.4951 1.3584-.8887 1.8408-1.7773.3809-.7237.419-.9014.4317-1.8789 0-1.2696-.3047-2.0186-1.1426-2.8565-1.041-1.041-2.8183-1.4726-4.126-1.0029Zm2.0694 2.0059c1.3076.5459 1.625 2.247.6093 3.2627-.8252.8251-1.9931.8251-2.8183 0-1.5742-1.5616.165-4.126 2.209-3.2627ZM41.3887 38.7965c-2.8818 1.041-3.7197 4.5957-1.5869 6.7158.8379.8379 1.5869 1.1426 2.8565 1.1299.914 0 1.1806-.0508 1.7265-.3301.9522-.4951 1.3584-.8887 1.8408-1.7773.3809-.7237.419-.9014.4317-1.8789 0-1.2696-.3047-2.0186-1.1426-2.8565-1.041-1.041-2.8183-1.4726-4.126-1.0029Zm2.0694 2.0059c1.3076.5459 1.625 2.247.6093 3.2627-.8252.8251-1.9931.8251-2.8183 0-1.5742-1.5616.165-4.126 2.209-3.2627ZM25.7061 50.0833c-.3682.3555-.3936.6602-.1143 1.5996 1.1426 3.8848 5.4844 6.1319 9.2168 4.7735 1.2188-.4444 1.9805-.9268 2.8438-1.8155.8252-.8506 1.4345-1.8789 1.7519-2.958.2793-.9394.2539-1.2441-.1142-1.5996l-.3047-.3174H26.0108l-.3047.3174Zm11.2734 2.1074c-.5078.876-1.3203 1.6377-2.2978 2.1075-.9141.457-1.0284.4824-2.1836.4824-1.1553 0-1.2696-.0254-2.1836-.4824-.9776-.4698-1.7901-1.2315-2.2979-2.1075l-.2285-.3935h9.4199l-.2285.3935ZM2.0313 62.9688v1.0156h2.0312v-2.0313H2.0313v1.0157ZM60.9375 62.9688v1.0156h2.0313v-2.0313h-2.0313v1.0157Z"
          />
        </g>
      </svg>
    );
  }
  return (
    <div className="w-[100%] h-[300px] bg-white rounded-md flex flex-col overflow-hidden">
      <div className="flex flex-row justify-between items-center h-[60px] border-b py-2 text-center font-semibold">
        <div className="w-1/5 ">랭킹</div>
        <div className="w-1/5 ">등급</div>
        <div className="w-1/5 ">이름 </div>
        <div className="w-1/5 ">점수</div>
        <div className="w-1/5 ">시도횟수</div>
        {/* <span>등록일자</span> */}
      </div>
      {rankingInfo?.map((item, index) => (
        <div
          key={index}
          className="flex flex-row justify-between items-center h-[80px] border-b py-2 font-semibold"
        >
          <div className="w-1/5 text-center font-semibold text-4xl">
            {index + 1}
          </div>
          <div className=" mx-auto">
            {" "}
            <RankingMask color={rankingColor[index]} />
          </div>
          <div className="w-1/5 text-center">
            {item.name ? item.name : "익명"}
          </div>
          <div className="w-1/5 text-center">{item.highScore}</div>
          <div className="w-1/5 text-center">{item.scores.length}</div>
        </div>
      ))}
    </div>
  );
}
